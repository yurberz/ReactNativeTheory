/*
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó
    ‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë
    ‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë
    ‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ÄÉ‚ÄÉ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë
    ‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ÄÉ‚ÄÉ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë
    ‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ÄÉ‚ÄÉ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù

    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
    ‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë

        –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã —É–∑–Ω–∞–µ—à—å:
- —á—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∫–æ–≥–¥–∞ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
- —Å—É—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä

    –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –ø–∞—Ä–∫—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏—è–º:    
--> https://refactoring.guru/ru/design-patterns <--
    –ö –ó–∞–¥–∞–Ω–∏—é 1
--> https://refactoring.guru/ru/design-patterns/adapter <--
    –ö –ó–∞–¥–∞–Ω–∏—é 2
--> https://refactoring.guru/ru/design-patterns/observer <--
    –ö –ó–∞–¥–∞–Ω–∏—é 3 
--> https://refactoring.guru/ru/design-patterns/abstract-factory <--
====================================================================
    –ü–†–û–î–í–ò–ù–£–¢–´–ô –£–†–û–í–ï–ù–¨
    –ö –ó–∞–¥–∞–Ω–∏—é 4
--> https://refactoring.guru/ru/design-patterns/decorator <--
    –ö –ó–∞–¥–∞–Ω–∏—é 5
--> https://refactoring.guru/ru/design-patterns/facade <--
    –ö –ó–∞–¥–∞–Ω–∏—é 6
--> https://refactoring.guru/ru/design-patterns/state <--

*/

// –ë–ê–ó–û–í–´–ô –£–†–û–í–ï–ù–¨
/*
        –ó–∞–¥–∞–Ω–∏–µ 1
    –†–µ–∞–ª–∏–∑—É–π –ø–∞—Ç—Ç–µ—Ä–Ω Adapter –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: 
    –ï—Å—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞: –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏ —ç–≤–∞–∫—É–∞—Ç–æ—Ä. –ö–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –º–æ–∂–µ—Ç –µ–∑–¥–∏—Ç—å. 
    –£ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å. –•–æ–∑—è–∏–Ω –≤—ã–∑–≤–∞–ª —ç–≤–∞–∫—É–∞—Ç–æ—Ä –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞—á–∞–ª–∏ –±—É–∫—Å–∏—Ä–æ–≤–∞—Ç—å. 
    –û–ø–∏—à–∏—Ç–µ —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é —Ä–µ–∞–ª–∏–∑—É—è –ø–∞—Ç—Ç–µ—Ä–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—ã–≤–æ–¥–∞–º–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

interface ICar {
  move(): void;
}

interface ITowTruck {
  move(): void;
  evacuate(): void;
}

class Car implements ICar {
  public move() {
    console.log("The car moves üèé");
  }
}

class TowTruck implements ITowTruck {
  public move() {
    console.log("The tow truck moves üöì");
  }

  public evacuate() {
    console.log("Towing a car...");
  }
}

class CarToEvacuate implements ICar {
  towTruck: ITowTruck;

  constructor(towTruck: ITowTruck) {
    this.towTruck = towTruck;
  }

  public move(): void {
    this.towTruck.evacuate();
  }
}

const car = new Car();
const towTruck = new TowTruck();
const brokenCar = new CarToEvacuate(towTruck);

car.move();
console.log("");
console.log("The car broke down, calling tow truck...");
console.log("");
towTruck.move();
console.log("");
brokenCar.move();
console.log("");

/*
        –ó–∞–¥–∞–Ω–∏–µ 2
    –†–µ–∞–ª–∏–∑—É–π –ø–∞—Ç—Ç–µ—Ä–Ω Observer –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: 
    –í –¥–æ–º–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è. –û–Ω–∞ –æ–ø–æ–≤–µ—â–∞–µ—Ç –æ —Ç—Ä–µ–≤–æ–≥–µ –æ—Ö—Ä–∞–Ω–Ω—É—é 
    —Ñ–∏—Ä–º—É –∏ —Ö–æ–∑—è–∏–Ω–∞ –¥–æ–º–∞, –ø–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏, –≤—Å–µ —Ç–∞–∫ –∂–µ –ø–æ–ª—É—á–∞—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
*/

interface ISubject {
  data: number;
  setData(value: number): void;
  registerObserver(observer: IObserver): void;
  removeObserver(observer: IObserver): void;
  notifyObservers(): void;
}

interface IObserver {
  update(subject: ISubject): void;
}

class AlarmSystem implements ISubject {
  data: number;
  private observers: IObserver[] = [];

  public setData() {
    this.data = Math.round(Math.random());

    console.log("Alarm system: Updating...");

    this.notifyObservers();
  }

  public registerObserver(observer: IObserver) {
    if (!this.observers.includes(observer)) {
      this.observers.push(observer);

      console.log("Alarm system: register observer");
    }
  }

  public removeObserver(observer: IObserver) {
    this.observers = this.observers.filter((register) => register !== observer);

    console.log("Alarm system: remove observer");
  }

  public notifyObservers() {
    console.log("Alarm system: Notifying observers...");

    this.observers.forEach((observer) => observer.update(this));
  }
}

class Observer implements IObserver {
  public update(subject: ISubject) {
    if (subject.data === 1) {
      console.log("ALERTS!");
    } else {
      console.log("Stay cool...");
    }
  }
}

const ajax = new AlarmSystem();
const security = new Observer();
const owner = new Observer();

ajax.registerObserver(security);
ajax.registerObserver(owner);
console.log("");
ajax.setData();
ajax.setData();
console.log("");
ajax.removeObserver(owner);
console.log("");
ajax.setData();

/* 
        –ó–∞–¥–∞–Ω–∏–µ 3
    –†–µ–∞–ª–∏—É–π –ø–∞—Ç—Ç–µ—Ä–Ω Abstract Factory –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ:
    –ï—Å—Ç—å –¥–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è Samsung –∏ Apple. –ö–∞–∂–¥—ã–π –∏–∑ —ç—Ç–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –≤—ã–ø—É—Å–∫–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–≤–∞–π—Å—ã (—Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø–ª–∞–Ω—à–µ—Ç—ã, –∫–æ–º–ø—å—é—Ç–µ—Ä—ã –∏ —Ç.–¥).
    –§–∞–±—Ä–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–µ–≤–∞–π—Å—ã –ª—é–±–æ–π –º–∞—Ä–∫–∏ –∏ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞. 
*/

interface IFactory {
  createPhone(): IPhone;
  createTablet(): ITablet;
}

interface IPhone {
  phone(): void;
}

interface ITablet {
  tablet(): void;
}

class AppleFactory implements IFactory {
  public createPhone() {
    return new ApplePhone();
  }

  public createTablet() {
    return new AppleTablet();
  }
}

class SamsungFactory implements IFactory {
  public createPhone() {
    return new SamsungPhone();
  }

  public createTablet() {
    return new SamsungTablet();
  }
}

class ApplePhone implements IPhone {
  public phone() {
    console.log("Apple phone");
  }
}

class SamsungPhone implements IPhone {
  public phone() {
    console.log("Samsung phone");
  }
}

class AppleTablet implements ITablet {
  public tablet() {
    console.log("Apple tablet");
  }
}

class SamsungTablet implements ITablet {
  public tablet() {
    console.log("Samsung tablet");
  }
}

const createProduct = (factory: IFactory) => {
  const phone = factory.createPhone();
  const tablet = factory.createTablet();

  phone.phone();
  tablet.tablet();
};

createProduct(new AppleFactory());
console.log("");
createProduct(new SamsungFactory());

// –ü–†–û–î–í–ò–ù–£–¢–´–ô –£–†–û–í–ï–ù–¨
/*
        –ó–∞–¥–∞–Ω–∏–µ 4
    –†–µ–∞–ª–∏–∑—É–π –ø–∞—Ç—Ç–µ—Ä–Ω Decorator –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: 
    –§–∞—Å—Ç—Ñ—É–¥ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –¥–≤–∞ –∫–æ–º–±–æ –Ω–∞–±–æ—Ä–∞ –ß–∏–∑–±—É—Ä–≥–µ—Ä –º–µ–Ω—é –∏ –ì–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é.
    –ö–∞–∂–¥—ã–π –∏–∑ —ç—Ç–∏—Ö –Ω–∞–±–æ—Ä–æ–≤ –º–æ–≥—É—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–∞–ø–∏—Ç–∫–∞–º–∏ –∏–ª–∏ –¥–µ—Å–µ—Ä—Ç–∞–º–∏ –Ω–∞ –≤—ã–±–æ—Ä –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, –∏–∑-–∑–∞ —á–µ–≥–æ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –µ–≥–æ —Ü–µ–Ω–∞.
    –ü–æ—Å—Ç—É–ø–∏–ª –∑–∞–∫–∞–∑ –Ω–∞ –¥–≤–∞ –º–µ–Ω—é (–ß–∏–∑–±—É—Ä–≥–µ—Ä –º–µ–Ω—é –∏ –ì–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é), –æ–¥–Ω–æ —Å —Å–æ–∫–æ–º, –∞ –≤—Ç–æ—Ä–æ–µ —Å –∫–æ–ª–æ–π –∏ –ø–æ–Ω—á–∏–∫–æ–º. 
    –ü–æ–º–æ–≥–∏—Ç–µ —Ñ–∞—Å—Ç—Ñ—É–¥—É –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ –∑–∞–∫–∞–∑ –≤ –∫–æ–Ω—Å–æ–ª—å, –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã—Ö –≤–∏–¥–æ–≤ –º–µ–Ω—é.
*/

interface IFastFood {
  order(): void;
}

class MenuDecorator implements IFastFood {
  protected menu: IFastFood;

  constructor(menu: IFastFood) {
    this.menu = menu;
  }

  public order() {
    this.menu.order();
  }
}

class CheesburgerMenu implements IFastFood {
  public order() {
    console.log("basic combo Cheesburger menu");
  }
}

class HamburgerMenu implements IFastFood {
  public order() {
    console.log("basic combo Humburger menu");
  }
}

class AddJuice extends MenuDecorator {
  public order() {
    super.order();

    console.log("added juice");
  }
}

class AddCola extends MenuDecorator {
  public order() {
    super.order();

    console.log("added cola");
  }
}

class AddDonut extends MenuDecorator {
  public order() {
    super.order();

    console.log("added donut");
  }
}

const basicCheesburgerMenu = new CheesburgerMenu();
const cheesburgerMenuPlus = new AddJuice(new CheesburgerMenu());
const hamburgerMenuPlus = new AddDonut(new AddCola(new HamburgerMenu()));

basicCheesburgerMenu.order();
console.log("");
cheesburgerMenuPlus.order();
console.log("");
hamburgerMenuPlus.order();

/*
        –ó–∞–¥–∞–Ω–∏–µ 5
    –†–µ–∞–ª–∏–∑—É–π –ø–∞—Ç—Ç–µ—Ä–Ω Facade –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: 
    –£ –≤–∞—Å —É–º–Ω—ã–π –¥–æ–º. –û–Ω –Ω–∞–ø–∏—á–∫–∞–Ω –º–Ω–æ–≥–∏–º–∏ –¥–µ–≤–∞–π—Å–∞–º–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–±–æ—Ä–∞–º–∏. 
    –ö–æ–≥–¥–∞ –≤—ã —É—Ö–æ–¥–∏—Ç–µ –∏–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –¥–æ–º–æ–π –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–¥–Ω–∏—Ö –∏ —Ç–µ—Ö –∂–µ –¥–µ–π—Å—Ç–≤–∏–π (–≤–∫–ª/–≤—ã–∫–ª —Å–≤–µ—Ç–∞, –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞, –º—É–∑—ã–∫–∏ –∏ —Ç.–¥).
    –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ –¥–æ–º–∞ - "—Ö–æ–∑—è–∏–Ω –¥–æ–º–∞", "—Ö–æ–∑—è–∏–Ω —É—à–µ–ª".
*/

interface ISmartHouse {
  lightsControl: IController;
  musicControl: IController;
  ownerHome(): void;
  ownerOut(): void;
}

interface IController {
  on(): void;
  off(): void;
}

class SmartHouse implements ISmartHouse {
  lightsControl: Lights;
  musicControl: Music;

  constructor(lights: Lights, music: Music) {
    this.lightsControl = lights || new Lights();
    this.musicControl = music || new Music();
  }

  ownerHome() {
    console.log("honey, i`m home");

    this.lightsControl.on();
    this.musicControl.on();
  }

  ownerOut() {
    console.log("bye, bye");

    this.lightsControl.off();
    this.musicControl.off();
  }
}

class Lights implements IController {
  on() {
    console.log("light on!");
  }

  off() {
    console.log("light off!");
  }
}

class Music implements IController {
  on() {
    console.log("music on!");
  }

  off() {
    console.log("music off!");
  }
}

const smartHouse = new SmartHouse(new Lights(), new Music());
smartHouse.ownerOut();
console.log("");
smartHouse.ownerHome();

/*
        –ó–∞–¥–∞–Ω–∏–µ 6
    –†–µ–∞–ª–∏–∑—É–π –ø–∞—Ç—Ç–µ—Ä–Ω State –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: 
    –î–æ–ø—É—Å—Ç–∏–º, —á—Ç–æ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—ã–ª–∏–≤–∫–æ–π –≤ —Å—Ç–æ—Ä, –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ 4-x —Å–æ—Å—Ç–æ—è–Ω–∏—Ö: waiting for review, in review, ready for sale, published.
    –í –∫–∞–∂–¥–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –º—ã –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã Publish –∏ Cancel, —É–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ-—Ä–∞–∑–Ω–æ–º—É:
     - –∏–∑ waiting for review Publish –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, Cancel –≤—ã–∑–≤–∞—Ç—å –Ω–µ–ª—å–∑—è
     - –∏–∑ in review Publish –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤ ready for sale, –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, 
       –ª–∏–±–æ –≤—ã–∑–æ–≤–µ—Ç Cancel, –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –∏ –≤–µ—Ä–Ω–µ—Ç –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    - –∏–∑ ready for sale –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å Cancel –∏ –æ—Ç–º–µ–Ω–∏—Ç—å –≤—ã–ª–∏–≤–∫—É, –∏–ª–∏ Publish –∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ published.
    - –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è published –Ω–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã Publish –∏ Cancel
*/

interface IMobileApp {
  state: IState;
  setState(state: IState): void;
  publish(): void;
  cancel(): void;
}

interface IState {
  context: IMobileApp;
  setContext(context: IMobileApp): void;
  publish(): void;
  cancel(): void;
}

class MobileApp implements IMobileApp {
  state: State;

  constructor(state: State) {
    this.setState(state);
  }

  public setState(state: State) {
    console.log(`State to ${state.constructor.name}.`);

    this.state = state;
    this.state.setContext(this);
  }

  public publish() {
    this.state.publish();
  }

  public cancel() {
    this.state.cancel();
  }
}

abstract class State implements IState {
  context: MobileApp;

  public setContext(context: MobileApp) {
    this.context = context;
  }

  abstract publish(): void;

  abstract cancel(): void;
}

class WaitingForReview extends State {
  publish() {
    console.log("check plz!");
    this.context.setState(new InReview());
  }

  cancel() {
    throw new Error("Method not implemented.");
  }
}

class InReview extends State {
  publish() {
    console.log("nice!");
    this.context.setState(new ReadyForSale());
  }

  cancel() {
    console.log("read code review!");
    this.context.setState(new WaitingForReview());
  }
}

class ReadyForSale extends State {
  publish() {
    console.log("in store!");
    this.context.setState(new Published());
  }

  cancel() {
    console.log("cancel!");
    this.context.setState(new InReview());
  }
}

class Published extends State {
  publish(): void {
    throw new Error("Method not implemented.");
  }

  cancel(): void {
    throw new Error("Method not implemented.");
  }
}

const mobileApp = new MobileApp(new WaitingForReview());

mobileApp.publish();
mobileApp.cancel();
console.log("");
mobileApp.publish();
mobileApp.publish();
mobileApp.cancel();
console.log("");
mobileApp.publish();
mobileApp.publish();
